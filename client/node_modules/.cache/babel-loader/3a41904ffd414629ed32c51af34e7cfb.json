{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Jonas\\\\userlist\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jonas\\\\userlist\\\\client\\\\src\\\\components\\\\removeuser.js\";\nimport React from 'react';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { deleteUserMutation, getUsersQuery } from '../queries/queries';\nimport '../styles/global.css';\n\nfunction RemoveUser(props) {\n  const _useQuery = useQuery(getUsersQuery),\n        error = _useQuery.error;\n\n  const _useMutation = useMutation(deleteUserMutation),\n        _useMutation2 = _slicedToArray(_useMutation, 1),\n        deleteUserFromList = _useMutation2[0];\n\n  if (error) return `${error.message}`;\n\n  if (props.selected.length > 0) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Are you sure you want to remove user \", props.selected.map(e => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, e.name)), \" from the list?\"), React.createElement(\"button\", {\n      id: \"remove-user-button\",\n      onClick: e => props.selected.map(v => {\n        console.log(v.id);\n        deleteUserFromList({\n          variables: {\n            id: v.id\n          },\n          refetchQueries: [{\n            query: getUsersQuery\n          }]\n        });\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Remove\"));\n  } else if (props.selected.length === 0) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  }\n}\n\n;\nexport default RemoveUser;","map":{"version":3,"sources":["C:/Users/Jonas/userlist/client/src/components/removeuser.js"],"names":["React","useMutation","useQuery","deleteUserMutation","getUsersQuery","RemoveUser","props","error","deleteUserFromList","message","selected","length","color","map","e","name","v","console","log","id","variables","refetchQueries","query"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,qBAAtC;AACA,SAASC,kBAAT,EAA6BC,aAA7B,QAAkD,oBAAlD;AACA,OAAO,sBAAP;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA,oBACPJ,QAAQ,CAACE,aAAD,CADD;AAAA,QACjBG,KADiB,aACjBA,KADiB;;AAAA,uBAEIN,WAAW,CAACE,kBAAD,CAFf;AAAA;AAAA,QAElBK,kBAFkB;;AAIzB,MAAGD,KAAH,EAAU,OAAQ,GAAEA,KAAK,CAACE,OAAQ,EAAxB;;AACV,MAAGH,KAAK,CAACI,QAAN,CAAeC,MAAf,GAAwB,CAA3B,EAA8B;AAC1B,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAgEN,KAAK,CAACI,QAAN,CAAeG,GAAf,CAAmBC,CAAC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,CAAC,CAACC,IAAP,CAAxB,CAAhE,oBADF,EAEE;AACE,MAAA,EAAE,EAAC,oBADL;AAEE,MAAA,OAAO,EAAED,CAAC,IAAIR,KAAK,CAACI,QAAN,CAAeG,GAAf,CAAmBG,CAAC,IAAI;AACpCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,EAAd;AACAX,QAAAA,kBAAkB,CAAC;AAAEY,UAAAA,SAAS,EAAE;AAC9BD,YAAAA,EAAE,EAAEH,CAAC,CAACG;AADwB,WAAb;AAGnBE,UAAAA,cAAc,EAAE,CAAC;AAAEC,YAAAA,KAAK,EAAElB;AAAT,WAAD;AAHG,SAAD,CAAlB;AAKH,OAPe,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAgBC,GAjBL,MAiBW,IAAGE,KAAK,CAACI,QAAN,CAAeC,MAAf,KAA0B,CAA7B,EAAgC;AACrC,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAIL;AACA;;AAAA;AAEH,eAAeN,UAAf","sourcesContent":["import React from 'react';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks'\r\nimport { deleteUserMutation, getUsersQuery } from '../queries/queries'\r\nimport '../styles/global.css'\r\n\r\n\r\nfunction RemoveUser(props) {\r\n  const { error } = useQuery(getUsersQuery);\r\n  const [deleteUserFromList] = useMutation(deleteUserMutation)\r\n\r\n  if(error) return `${error.message}`;\r\n  if(props.selected.length > 0) {\r\n      return (\r\n        <div>\r\n          <p style={{color: \"red\"}}>Are you sure you want to remove user {props.selected.map(e => <li>{e.name}</li>)} from the list?</p>\r\n          <button\r\n            id=\"remove-user-button\"\r\n            onClick={e => props.selected.map(v => {\r\n              console.log(v.id);\r\n              deleteUserFromList({ variables: {\r\n                id: v.id\r\n              },\r\n              refetchQueries: [{ query: getUsersQuery }],\r\n            });\r\n          })\r\n          }>Remove</button>\r\n          </div>\r\n        )\r\n      } else if(props.selected.length === 0) {\r\n        return (\r\n          <div>\r\n          </div>\r\n    )\r\n  }\r\n  };\r\n\r\nexport default RemoveUser;\r\n"]},"metadata":{},"sourceType":"module"}