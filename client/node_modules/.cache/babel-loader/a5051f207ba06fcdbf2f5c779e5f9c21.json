{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonas\\\\userlist\\\\client\\\\src\\\\components\\\\userlist.js\";\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { getUsersQuery } from '../queries/queries';\nimport '../styles/global.css';\n\nfunction UserList(props) {\n  const _useQuery = useQuery(getUsersQuery),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return 'Loading...';\n  if (error) return `${error.message}`;\n\n  function clickCheckbox(e) {\n    if (checked === true) {\n      props.setSelected({\n        id: e.id,\n        name: e.name\n      });\n    } else if (checked === false) {\n      props.setSelected({\n        id: \"\",\n        name: \"\"\n      });\n    }\n  } //der mappes gennem listen af brugere fra databasen og hver enkelt returneres som et\n  //list element\n\n\n  return data.users.map(user => {\n    return React.createElement(\"div\", {\n      id: \"user-list-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      key: user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"list-elements-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      value: user.id //det individuelle list element gemmes i state, n책r der klikkes p책 det\n      ,\n      onClick: e => props.setSelected({\n        id: user.id,\n        name: user.name\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"list-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, user.name), React.createElement(\"div\", {\n      className: \"list-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, user.email), React.createElement(\"div\", {\n      className: \"list-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, user.id))));\n  });\n}\n\n;\nexport default UserList;","map":{"version":3,"sources":["C:/Users/Jonas/userlist/client/src/components/userlist.js"],"names":["React","useQuery","getUsersQuery","UserList","props","loading","error","data","message","clickCheckbox","e","checked","setSelected","id","name","users","map","user","email"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAO,sBAAP;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,oBACUH,QAAQ,CAACC,aAAD,CADlB;AAAA,QACfG,OADe,aACfA,OADe;AAAA,QACNC,KADM,aACNA,KADM;AAAA,QACCC,IADD,aACCA,IADD;;AAGvB,MAAGF,OAAH,EAAY,OAAO,YAAP;AACZ,MAAGC,KAAH,EAAU,OAAQ,GAAEA,KAAK,CAACE,OAAQ,EAAxB;;AAEV,WAASC,aAAT,CAAuBC,CAAvB,EAA0B;AACxB,QAAGC,OAAO,KAAK,IAAf,EAAqB;AACnBP,MAAAA,KAAK,CAACQ,WAAN,CAAkB;AAClBC,QAAAA,EAAE,EAAEH,CAAC,CAACG,EADY;AAElBC,QAAAA,IAAI,EAAEJ,CAAC,CAACI;AAFU,OAAlB;AAID,KALD,MAKO,IAAGH,OAAO,KAAK,KAAf,EAAsB;AAC3BP,MAAAA,KAAK,CAACQ,WAAN,CAAkB;AAClBC,QAAAA,EAAE,EAAE,EADc;AAElBC,QAAAA,IAAI,EAAE;AAFY,OAAlB;AAID;AACF,GAlBsB,CAmBvB;AACA;;;AACA,SAAOP,IAAI,CAACQ,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAAI;AAC5B,WACE;AAAK,MAAA,EAAE,EAAC,qBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACJ,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,EAAE,EAAC,yBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAEI,IAAI,CAACJ,EAFd,CAGE;AAHF;AAIE,MAAA,OAAO,EAAGH,CAAD,IACPN,KAAK,CAACQ,WAAN,CAAkB;AAClBC,QAAAA,EAAE,EAAEI,IAAI,CAACJ,EADS;AAElBC,QAAAA,IAAI,EAAEG,IAAI,CAACH;AAFO,OAAlB,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF,EAcE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BG,IAAI,CAACH,IAApC,CAdF,EAeE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BG,IAAI,CAACC,KAApC,CAfF,EAgBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BD,IAAI,CAACJ,EAApC,CAhBF,CAFF,CADF,CADF;AA0BD,GA3BM,CAAP;AA4BD;;AAAA;AAED,eAAeV,QAAf","sourcesContent":["import React from 'react'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { getUsersQuery } from '../queries/queries'\r\nimport '../styles/global.css'\r\n\r\nfunction UserList(props) {\r\n  const { loading, error, data } = useQuery(getUsersQuery)\r\n\r\n  if(loading) return 'Loading...';\r\n  if(error) return `${error.message}`;\r\n\r\n  function clickCheckbox(e) {\r\n    if(checked === true) {\r\n      props.setSelected({\r\n      id: e.id,\r\n      name: e.name\r\n  })\r\n    } else if(checked === false) {\r\n      props.setSelected({\r\n      id: \"\",\r\n      name: \"\"\r\n  })\r\n    }\r\n  }\r\n  //der mappes gennem listen af brugere fra databasen og hver enkelt returneres som et\r\n  //list element\r\n  return data.users.map(user => {\r\n    return(\r\n      <div id=\"user-list-container\">\r\n        <li key={user.id}>\r\n\r\n          <div id=\"list-elements-container\">\r\n            <div>\r\n            <input\r\n              type=\"checkbox\"\r\n              value={user.id}\r\n              //det individuelle list element gemmes i state, n책r der klikkes p책 det\r\n              onClick={(e) =>\r\n                props.setSelected({\r\n                id: user.id,\r\n                name: user.name\r\n            })\r\n            }\r\n               />\r\n            </div>\r\n            <div className=\"list-element\">{user.name}</div>\r\n            <div className=\"list-element\">{user.email}</div>\r\n            <div className=\"list-element\">{user.id}</div>\r\n          </div>\r\n\r\n        </li>\r\n      </div>\r\n    )\r\n  })\r\n};\r\n\r\nexport default UserList;\r\n"]},"metadata":{},"sourceType":"module"}