{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Jonas\\\\userlist\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jonas\\\\userlist\\\\client\\\\src\\\\components\\\\adduser.js\";\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { addUserMutation, getUsersQuery } from '../queries/queries';\n\nfunction AddUser() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        userName = _useState2[0],\n        setUserName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userEmail = _useState4[0],\n        setUserEmail = _useState4[1];\n\n  const _useMutation = useMutation(addUserMutation),\n        _useMutation2 = _slicedToArray(_useMutation, 1),\n        addUserToList = _useMutation2[0];\n\n  return React.createElement(\"form\", {\n    id: \"add-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Add user:\"), React.createElement(\"div\", {\n    className: \"input-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input-field\",\n    placeholder: \"Full Name\",\n    onFocus: e => e.target.placeholder = \"\",\n    onBlur: e => e.target.placeholder = \"Full Name\",\n    onChange: e => setUserName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"input-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"email\",\n    className: \"input-field\",\n    placeholder: \"Email\",\n    onFocus: e => e.target.placeholder = \"\",\n    onBlur: e => e.target.placeholder = \"Email\",\n    onChange: e => setUserEmail(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    id: \"add-user-button\",\n    onClick: e => {\n      e.preventDefault();\n      addUserToList({\n        variables: {\n          name: userName,\n          email: userEmail\n        },\n        refetchQueries: [{\n          query: getUsersQuery\n        }]\n      });\n      setUserName(\"\");\n      setUserEmail(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Add\"));\n}\n\nexport default AddUser;","map":{"version":3,"sources":["C:/Users/Jonas/userlist/client/src/components/adduser.js"],"names":["React","useState","useMutation","addUserMutation","getUsersQuery","AddUser","userName","setUserName","userEmail","setUserEmail","addUserToList","e","target","placeholder","value","preventDefault","variables","name","email","refetchQueries","query"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,oBAA/C;;AAEA,SAASC,OAAT,GAAmB;AAAA,oBAEeJ,QAAQ,CAAC,EAAD,CAFvB;AAAA;AAAA,QAEVK,QAFU;AAAA,QAEAC,WAFA;;AAAA,qBAGiBN,QAAQ,CAAC,EAAD,CAHzB;AAAA;AAAA,QAGVO,SAHU;AAAA,QAGCC,YAHD;;AAAA,uBAIOP,WAAW,CAACC,eAAD,CAJlB;AAAA;AAAA,QAIVO,aAJU;;AAMjB,SACE;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,aAFZ;AAGE,IAAA,WAAW,EAAC,WAHd;AAIE,IAAA,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAACC,MAAF,CAASC,WAAT,GAAuB,EAJvC;AAKE,IAAA,MAAM,EAAEF,CAAC,IAAIA,CAAC,CAACC,MAAF,CAASC,WAAT,GAAuB,WALtC;AAME,IAAA,QAAQ,EAAEF,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACC,MAAF,CAASE,KAAV,CAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAYE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAC,aAFZ;AAGE,IAAA,WAAW,EAAC,OAHd;AAIE,IAAA,OAAO,EAAEH,CAAC,IAAIA,CAAC,CAACC,MAAF,CAASC,WAAT,GAAuB,EAJvC;AAKE,IAAA,MAAM,EAAEF,CAAC,IAAIA,CAAC,CAACC,MAAF,CAASC,WAAT,GAAuB,OALtC;AAME,IAAA,QAAQ,EAAEF,CAAC,IAAIF,YAAY,CAACE,CAAC,CAACC,MAAF,CAASE,KAAV,CAN7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZF,EAsBE;AAAQ,IAAA,EAAE,EAAC,iBAAX;AAA6B,IAAA,OAAO,EAAEH,CAAC,IAAI;AACzCA,MAAAA,CAAC,CAACI,cAAF;AACAL,MAAAA,aAAa,CAAC;AAAEM,QAAAA,SAAS,EAAE;AACzBC,UAAAA,IAAI,EAAEX,QADmB;AAEzBY,UAAAA,KAAK,EAAEV;AAFkB,SAAb;AAIdW,QAAAA,cAAc,EAAE,CAAC;AAAEC,UAAAA,KAAK,EAAEhB;AAAT,SAAD;AAJF,OAAD,CAAb;AAMFG,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACC,KAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAtBF,CADF;AAsCD;;AAED,eAAeJ,OAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { addUserMutation, getUsersQuery } from '../queries/queries'\r\n\r\nfunction AddUser() {\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [addUserToList] = useMutation(addUserMutation);\r\n\r\n  return(\r\n    <form id=\"add-user\">\r\n      <h2>Add user:</h2>\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"input-field\"\r\n          placeholder=\"Full Name\"\r\n          onFocus={e => e.target.placeholder = \"\"}\r\n          onBlur={e => e.target.placeholder = \"Full Name\"}\r\n          onChange={e => setUserName(e.target.value)} />\r\n      </div>\r\n\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"email\"\r\n          className=\"input-field\"\r\n          placeholder=\"Email\"\r\n          onFocus={e => e.target.placeholder = \"\"}\r\n          onBlur={e => e.target.placeholder = \"Email\"}\r\n          onChange={e => setUserEmail(e.target.value)} />\r\n      </div>\r\n\r\n      <button id=\"add-user-button\" onClick={e => {\r\n        e.preventDefault();\r\n        addUserToList({ variables: {\r\n          name: userName,\r\n          email: userEmail\r\n        },\r\n        refetchQueries: [{ query: getUsersQuery }],\r\n      });\r\n      setUserName(\"\");\r\n      setUserEmail(\"\");\r\n      }\r\n      }>Add</button>\r\n\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddUser;\r\n"]},"metadata":{},"sourceType":"module"}